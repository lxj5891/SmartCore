#!/usr/bin/env node

"use strict";

/**
 * Module dependencies.
 */
var program       = require("commander")
  , mkdirp        = require("mkdirp")
  , pkg           = require("../package.json")
  , version       = pkg.version
  , fs            = require("fs");

// CLI
program
  .version(version)
  .usage("[options] [dir]")
  .parse(process.argv);

// Path
var path = program.args.shift() || ".";

/**
 * Check if the given directory `path` is empty. *
 * @param {String} path
 * @param {Function} fn
 */
function emptyDirectory(path, fn) {
  console.log(path);
  fs.readdir(path, function(err, files) {
    if (err && "ENOENT" !== err.code)  {
      throw err;
    }
    fn(!files || !files.length);
  });
}

/**
 * Mkdir -p.
 * @param {String} path
 * @param {Function} fn
 */
function mkdir(path, fn) {
  mkdirp(path, function(err) {
    if (err) {
      throw err;
    }
    console.log("   [create] : " + path);

    if (fn) {
      fn();
    }
  });
}

/**
 * Exit with the given `str`.
 * @param {String} str
 */
function abort(str) {
  console.error(str);
  process.exit(1);
}

/**
 * Create application at the given directory `path`.
 * @param {String} path
 */
function createApplicationAt(path) {
  process.on("exit", function() {
    console.log("exit");
  });

  mkdir(path, function() {

    mkdir(path + "/apis", null);
    mkdir(path + "/controllers", null);
    mkdir(path + "/logs", null);
    mkdir(path + "/models", null);
    mkdir(path + "/routes", null);
    mkdir(path + "/views", null);

    mkdir(path + "/public", null);
    mkdir(path + "/public/javascripts", null);
    mkdir(path + "/public/images", null);
    mkdir(path + "/public/stylesheets", null);
  });
}

// Generate application
(function createApplication(path) {
  emptyDirectory(path, function(empty){

    if (empty) {
      createApplicationAt(path);
    } else {
      abort("aborting");
    }
  });
})(path);
